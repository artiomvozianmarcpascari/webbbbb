@model Vintagefur.Domain.Models.Order
@{
    ViewBag.Title = "Order Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Order #@Model.Id.ToString("D6")</h2>
    <div>
        <a href="@Url.Action("Orders", "Admin")" class="btn btn-secondary">
            <i class="fas fa-arrow-left mr-2"></i> Back to Orders
        </a>
        <a href="@Url.Action("EditOrder", "Admin", new { id = Model.Id })" class="btn btn-primary">
            <i class="fas fa-edit mr-2"></i> Edit Order
        </a>
        <a href="@Url.Action("DeleteOrder", "Admin", new { id = Model.Id })" class="btn btn-danger">
            <i class="fas fa-trash-alt mr-2"></i> Delete Order
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">Order Information</h5>
            </div>
            <div class="card-body">
                <table class="table table-sm">
                    <tr>
                        <th>Order ID:</th>
                        <td>@Model.Id.ToString("D6")</td>
                    </tr>
                    <tr>
                        <th>Order Date:</th>
                        <td>@Model.OrderDate.ToString("dd MMM yyyy HH:mm")</td>
                    </tr>
                    <tr>
                        <th>Status:</th>
                        <td>
                            @{
                                string badgeClass = "badge-secondary";
                                
                                switch (Model.Status)
                                {
                                    case Vintagefur.Domain.Models.OrderStatus.Pending:
                                        badgeClass = "badge-warning";
                                        break;
                                    case Vintagefur.Domain.Models.OrderStatus.Processing:
                                        badgeClass = "badge-info";
                                        break;
                                    case Vintagefur.Domain.Models.OrderStatus.Shipped:
                                        badgeClass = "badge-primary";
                                        break;
                                    case Vintagefur.Domain.Models.OrderStatus.Delivered:
                                        badgeClass = "badge-success";
                                        break;
                                    case Vintagefur.Domain.Models.OrderStatus.Cancelled:
                                        badgeClass = "badge-danger";
                                        break;
                                }
                            }
                            <span class="badge @badgeClass">@Model.Status</span>
                        </td>
                    </tr>
                    @if (Model.ShippingDate.HasValue)
                    {
                        <tr>
                            <th>Shipping Date:</th>
                            <td>@Model.ShippingDate.Value.ToString("dd MMM yyyy")</td>
                        </tr>
                    }
                    @if (Model.DeliveryDate.HasValue)
                    {
                        <tr>
                            <th>Delivery Date:</th>
                            <td>@Model.DeliveryDate.Value.ToString("dd MMM yyyy")</td>
                        </tr>
                    }
                    <tr>
                        <th>Total Amount:</th>
                        <td><strong>$@Model.TotalAmount.ToString("N2")</strong></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">Customer Information</h5>
            </div>
            <div class="card-body">
                @if (Model.Customer != null)
                {
                    <h6><a href="@Url.Action("CustomerDetails", "Admin", new { id = Model.CustomerId })">
                        @Model.Customer.FirstName @Model.Customer.LastName
                    </a></h6>
                    <p>
                        <i class="fas fa-envelope mr-2"></i> @Model.Customer.Email<br />
                        <small class="text-muted">
                            Customer since: @Model.Customer.RegistrationDate.ToString("dd MMM yyyy")
                        </small>
                    </p>
                }
                else
                {
                    <p class="text-muted">Customer information not available</p>
                }
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">Shipping Address</h5>
            </div>
            <div class="card-body">
                <address>
                    @(!string.IsNullOrEmpty(Model.ShippingAddress) ? Model.ShippingAddress : "No address provided")<br />
                    @if (!string.IsNullOrEmpty(Model.ShippingCity))
                    {
                        @Model.ShippingCity<br />
                    }
                    @if (!string.IsNullOrEmpty(Model.ShippingPostalCode))
                    {
                        @Model.ShippingPostalCode<br />
                    }
                    @if (!string.IsNullOrEmpty(Model.ShippingCountry))
                    {
                        @Model.ShippingCountry
                    }
                </address>
            </div>
        </div>
        
        @if (!string.IsNullOrEmpty(Model.Notes))
        {
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">Order Notes</h5>
                </div>
                <div class="card-body">
                    <p>@Model.Notes</p>
                </div>
            </div>
        }
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5 class="card-title mb-0">Order Items</h5>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Unit Price</th>
                        <th>Quantity</th>
                        <th class="text-right">Total</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.OrderItems != null && Model.OrderItems.Count > 0)
                    {
                        foreach (var item in Model.OrderItems)
                        {
                            <tr>
                                <td>
                                    @if (item.Product != null)
                                    {
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(item.Product.ImageUrl))
                                            {
                                                <img src="@item.Product.ImageUrl" alt="@item.Product.Name" style="width: 40px; height: 40px; object-fit: cover; margin-right: 10px;" />
                                            }
                                            <div>
                                                <a href="@Url.Action("EditProduct", "Admin", new { id = item.ProductId })">@item.Product.Name</a>
                                                <div class="small text-muted">SKU: @item.ProductId.ToString("D5")</div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <span>Product #@item.ProductId</span>
                                    }
                                </td>
                                <td>$@item.UnitPrice.ToString("N2")</td>
                                <td>@item.Quantity</td>
                                <td class="text-right">$@((item.UnitPrice * item.Quantity).ToString("N2"))</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center">No items in this order</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th colspan="3" class="text-right">Total:</th>
                        <th class="text-right">$@Model.TotalAmount.ToString("N2")</th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div> 